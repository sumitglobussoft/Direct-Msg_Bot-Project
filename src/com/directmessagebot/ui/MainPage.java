/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.directmessagebot.ui;

import com.directmessagebot.dao.AccountManagerDao;
import com.directmessagebot.dao.AccountManagerDaoImpl;
import com.directmessagebot.entity.AccountManager;
import com.directmessagebot.thread.LoadAccountThread;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author Nitesh Shah
 */
public class MainPage extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form MainPage
     */
    ApplicationContext context
            = new ClassPathXmlApplicationContext("Beans.xml");

    AccountManagerDao objAccountManagerDao
            = (AccountManagerDaoImpl) context.getBean("AccountManagerDaoImpl");

    DirectMessagePage a = null;

    public MainPage() {
        initComponents();
        objAccountManagerDao.createTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        AccountChecker = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        UsernameTextField = new javax.swing.JTextField();
        UsernameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        ProxyIpLabel = new javax.swing.JLabel();
        ProxyPortLabel = new javax.swing.JLabel();
        ProxyUsernameLabel = new javax.swing.JLabel();
        ProxyPasswordLabel = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JTextField();
        ProxyIPTextField = new javax.swing.JTextField();
        ProxyPortTextField = new javax.swing.JTextField();
        ProxyUsernameTextField = new javax.swing.JTextField();
        ProxyPasswordTextField = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        LoggerLabel = new javax.swing.JLabel();
        loggerTextArea = new java.awt.TextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        DirectMessageMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DIRECT MESSAGE BOT");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AccountChecker.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AccountChecker.setText("Load Accounts");
        AccountChecker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountCheckerActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Clear.setText("Clear Database");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AccountChecker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AccountChecker, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        UsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTextFieldActionPerformed(evt);
            }
        });

        UsernameLabel.setText("Username ");

        PasswordLabel.setText("Password");

        ProxyIpLabel.setText("Proxy IP");

        ProxyPortLabel.setText("Proxy Port ");

        ProxyUsernameLabel.setText("Proxy Username");

        ProxyPasswordLabel.setText("Proxy Password");

        PasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTextFieldActionPerformed(evt);
            }
        });

        ProxyPortTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProxyPortTextFieldActionPerformed(evt);
            }
        });

        ProxyPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProxyPasswordTextFieldActionPerformed(evt);
            }
        });

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("ADD A SINGLE ACCOUNT");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordLabel)
                            .addComponent(ProxyIpLabel)
                            .addComponent(ProxyPortLabel)
                            .addComponent(ProxyUsernameLabel)
                            .addComponent(ProxyPasswordLabel))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UsernameTextField)
                                .addComponent(PasswordTextField)
                                .addComponent(ProxyIPTextField)
                                .addComponent(ProxyPortTextField)
                                .addComponent(ProxyUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ProxyPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(UsernameLabel)
                    .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProxyIpLabel)
                    .addComponent(ProxyIPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProxyPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProxyPortLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProxyUsernameLabel)
                    .addComponent(ProxyUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProxyPasswordLabel)
                    .addComponent(ProxyPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Submit)
                .addContainerGap())
        );

        button1.setLabel("CLEAR LOGGER");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        LoggerLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LoggerLabel.setText("Logger:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loggerTextArea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(LoggerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LoggerLabel)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggerTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("Account Manager");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Direct Message Account");

        DirectMessageMenuItem.setText("Direct Message");
        DirectMessageMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectMessageMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(DirectMessageMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameTextFieldActionPerformed

    private void ProxyPortTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProxyPortTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProxyPortTextFieldActionPerformed

    private void ProxyPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProxyPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProxyPasswordTextFieldActionPerformed

    private void DirectMessageMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectMessageMenuItemActionPerformed
        // TODO add your handling code here:
        if (a == null) {
            a = new DirectMessagePage(objAccountManagerDao);
        }
        a.setVisible(true);
        a.setDefaultCloseOperation(DirectMessagePage.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_DirectMessageMenuItemActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Do you really want to Clear all the Data in the Database????", "REFRESH DATA", 0);
        System.out.println(a);

        if (a == 0) {
            objAccountManagerDao.deleteAll();
            loggerTextArea.setText("\nDone Deleting all the Data from the Database");
        }
    }//GEN-LAST:event_ClearActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        AccountManager objAccountManager = new AccountManager();
        if (UsernameTextField.getText().trim().length() > 0) {
            objAccountManager.setUsername(UsernameTextField.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Please enter the username");
        }
        objAccountManager.setPassword(PasswordTextField.getText());
        objAccountManager.setProxyIp(ProxyIPTextField.getText());
        objAccountManager.setProxyPort(ProxyPortTextField.getText());
        objAccountManager.setProxyUsername(ProxyUsernameTextField.getText());
        objAccountManager.setProxyPassword(ProxyPasswordTextField.getText());

        int insertstatus = objAccountManagerDao.insertAccountManager(objAccountManager);
        if (insertstatus == 1) {
            UsernameTextField.setText("");
            PasswordTextField.setText("");
            ProxyIPTextField.setText("");
            ProxyPortTextField.setText("");
            ProxyUsernameTextField.setText("");
            ProxyPasswordTextField.setText("");
            JOptionPane.showMessageDialog(null, "Inserted Account Information to the Database");
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void AccountCheckerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountCheckerActionPerformed
        // TODO add your handling code here:
        List<AccountManager> listAccountManager = new ArrayList();
        loggerTextArea.setText("");
        loggerTextArea.setText("\nPlease Wait. Loading the Accounts");

        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        FileSystemView a = fc.getFileSystemView();

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            System.out.println("Selected file: " + file.getAbsolutePath());

            //file.canRead();
            System.out.println(fc.getFileSystemView());

            try {
                // What to do with the file, e.g. display it in a TextArea
                FileReader fileReader = new FileReader(file.getAbsolutePath());

                BufferedReader br = new BufferedReader(fileReader);

                String line;
                int len;
                int testValid = 1;

                while ((line = br.readLine()) != null) {
                    AccountManager obj = new AccountManager();
                    System.out.println(line);
                    String[] divideEachProperty = line.split(":");
                    len = divideEachProperty.length;
                    if (len == 2) {
                        obj.setUsername(divideEachProperty[0]);
                        obj.setPassword(divideEachProperty[1]);
                    } else if (len == 4) {
                        obj.setUsername(divideEachProperty[0]);
                        obj.setPassword(divideEachProperty[1]);
                        obj.setProxyIp(divideEachProperty[2]);
                        obj.setProxyPort(divideEachProperty[3]);
                        obj.setProxyIp("");
                        obj.setProxyPort("");
                    } else if (len == 6) {
                        obj.setUsername(divideEachProperty[0]);
                        obj.setPassword(divideEachProperty[1]);
                        obj.setProxyIp(divideEachProperty[2]);
                        obj.setProxyPort(divideEachProperty[3]);
                        obj.setProxyUsername(divideEachProperty[4]);
                        obj.setProxyPassword(divideEachProperty[5]);
                    } else {
                        testValid = 0;
                        loggerTextArea.setText(line + "\n Please Input proper format");
                    }

                    //Cheking if the acount info is valid . And if so, Adding object to the list
                    if (testValid == 1) {

                        listAccountManager.add(obj);
                    }

                }
//                ArrayList<ProxyImport> proxyListClone = (ArrayList<ProxyImport>)proxyList.clone();
                ExecutorService executor = Executors.newFixedThreadPool(1);
                Callable worker = new LoadAccountThread(listAccountManager, objAccountManagerDao);

                try {
                    executor.submit(worker);
                } catch (Exception ex) {
                    Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }

                System.out.println(file.getAbsolutePath());

            } catch (Exception e) {
//                withoutProxyRadio.setSelected(true);
//                withProxyRadio.setSelected(false);
//                loggerArea.append("\n\nPlease Import a Valid .txt file!!");
//                loggerArea.append("\nProxy in the file must be in the following format!!");
//                loggerArea.append("\nProxyIP:ProxyPort:ProxyUsername:ProxyPassword");
            }
        } else {
//            withoutProxyRadio.setSelected(true);
//            withProxyRadio.setSelected(false);
//            calendarButton.setEnabled(true);
//            refreshDB.setEnabled(true);
//            loggerArea.append("\n\nPlease Import a Valid .txt file!!");
//            loggerArea.append("\nProxy in the file must be in the following format!!");
//            loggerArea.append("\nProxyIP:ProxyPort:ProxyUsername:ProxyPassword");
        }

    }//GEN-LAST:event_AccountCheckerActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        loggerTextArea.setText("");
    }//GEN-LAST:event_button1ActionPerformed

    private void PasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainPage().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AccountChecker;
    private javax.swing.JButton Clear;
    private javax.swing.JMenuItem DirectMessageMenuItem;
    private javax.swing.JLabel LoggerLabel;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField PasswordTextField;
    private javax.swing.JTextField ProxyIPTextField;
    private javax.swing.JLabel ProxyIpLabel;
    private javax.swing.JLabel ProxyPasswordLabel;
    private javax.swing.JTextField ProxyPasswordTextField;
    private javax.swing.JLabel ProxyPortLabel;
    private javax.swing.JTextField ProxyPortTextField;
    private javax.swing.JLabel ProxyUsernameLabel;
    private javax.swing.JTextField ProxyUsernameTextField;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextField;
    private java.awt.Button button1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static java.awt.TextArea loggerTextArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        //To change body of generated methods, choose Tools | Templates.
    }

}
